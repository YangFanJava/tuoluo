<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.version.dao.AppUserDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.version.entity.AppUserEntity" id="appUserMap">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="status" column="status"/>
        <result property="issms" column="isSMS"/>
        <result property="role" column="role"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.version.entity.AppUserEntity">
		select * from app_user where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.version.entity.AppUserEntity">
		select * from app_user
		<where>
			<if test="username != null and username.trim() != ''">
				and username like concat('%',#{username},'%')
			</if>
			<if test="mobile != null and mobile.trim() != ''">
				and mobile = #{mobile}
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from app_user 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.version.entity.AppUserEntity">
		insert into app_user
		(
			`id`, 
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`status`, 
			`isSMS`, 
			`role`, 
			`create_time`
		)
		values
		(
			#{id}, 
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{issms}, 
			#{role}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.version.entity.AppUserEntity">
		update app_user 
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="issms != null">`isSMS` = #{issms}, </if>
			<if test="role != null">`role` = #{role}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from app_user where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from app_user where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>